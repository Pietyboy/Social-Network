{"version":3,"file":"static/js/416.6f0a5551.chunk.js","mappings":"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","sources":["components/Messenger/Dialogs/Dialogs.styled.js","components/Messenger/Dialogs/Dialogs.jsx","components/Messenger/Dialogs/DialogsContainer.jsx","components/Messenger/Messages/Messages.styled.js","components/Messenger/Messages/Messages.jsx","components/Messenger/Messages/MessagesContainer.jsx","components/Messenger/Messenger.styled.js","components/Messenger/Messenger.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    width: 100%;\r\n    grid-column: 1/2;\r\n    grid-row: 1/3;\r\n    align-items: stretch;\r\n    //padding: 10px;\r\n    border-top: 1px solid #4b515a;\r\n    border-right: 2px solid #4b515a;\r\n    //background-color: #EDDCB1;\r\n    text-align: center;\r\n    display: grid;\r\n    overflow: hidden;\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport const Dialog = styled.section`\r\n    border: 1px solid #4b515a;\r\n    //padding: 5px;\r\n    margin-bottom: 5px;\r\n    opacity: 0.7;\r\n    min-width: 200px;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &.active{\r\n        opacity: 1;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Wrapper, Dialog } from \"./Dialogs.styled\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const DialogItem = (props) => {\r\n\r\n        let path = \"/messenger/\" + props.id;\r\n\r\n        return <Dialog>\r\n            <Link to={path}>{props.name}</Link>\r\n        </Dialog>\r\n    }\r\n\r\n    let dialogElements = props.data.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n\r\n        return (\r\n            <Wrapper>\r\n                {dialogElements}\r\n            </Wrapper>\r\n        )\r\n    }\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        data: state.messenger.dialogs,\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps) (Dialogs)\r\n\r\nexport default DialogsContainer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    width: 100%;\r\n    //padding: 10px;\r\n    //background-color: #B4A787;\r\n    //background: linear-gradient(180deg, rgba(243,220,180,1) 0%, #d2c09d 20%, #B4A787 60%);\r\n    //border-radius: 0 0 10px 0;\r\n    grid-column: 2/4;\r\n    grid-row: 1/3;\r\n   \r\n\r\n    border-top: 1px solid #4b515a;\r\n    //border-radius: 0 6px 6px 0 ;\r\n    //border: none;\r\n    display: grid;\r\n    grid-template-rows: auto 50px;\r\n    grid-template-columns: auto 100px;\r\n`;\r\n\r\nexport const FormWrapper=styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    //width: 50%;\r\n    align-items: center;\r\n`;\r\n\r\nexport const MessageWindow = styled.section`\r\n    grid-column: 1/3;\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n    grid-template-rows: auto;\r\n    row-gap: 10px;\r\n    column-gap: 10px;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    background-color: black;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    border: 3px solid #4b515a;\r\n    border-radius: 6px;\r\n    text-align: center;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    padding: 5px;\r\n`;\r\n\r\nexport const NewMessageText = styled.textarea`\r\n    grid-column: 1/2;\r\n    grid-row: 2/3;\r\n    background-color: inherit;\r\n    border: 1px solid #4b515a;\r\n    //border-radius: 6px 0 0 6px;\r\n    border-right: none;\r\n    resize: none;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    overflow: hidden;\r\n    color: white;\r\n    //margin-right: 10px;\r\n\r\n    //margin-top: 10px;\r\n    max-width: auto;\r\n    max-height: auto;\r\n`;\r\n\r\nexport const NewMessageButton = styled.button`\r\n    grid-column: 2/3;\r\n    grid-row: 2/3;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: inherit;\r\n    border: 1px solid #4b515a;\r\n    border-radius: 0 0 6px 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n        cursor: pointer;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Wrapper, MessageWindow, Message, NewMessageText, NewMessageButton, FormWrapper } from \"./Messages.styled\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let messageElements = props.data.map(m => <Message id={m.id} key={m.id}>{m.message}</Message>)\r\n\r\n    let onMessageClick = (message) => {\r\n        props.newMessage(message.newMessage);\r\n    }\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MessageWindow>{messageElements}</MessageWindow>\r\n            <NewMessageReduxForm onSubmit={onMessageClick}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst NewMessageForm = (props) => {\r\n    return(\r\n        <FormWrapper onSubmit={props.handleSubmit}>\r\n            <Field name={'newMessage'} component={'input'}/>\r\n            <NewMessageButton>Enter</NewMessageButton>\r\n        </FormWrapper>\r\n    );\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({ form:'newMessage' }) (NewMessageForm);\r\n\r\nexport default Messages;","import Messages from \"./Messages\";\r\nimport { newMessageActionCreator} from \"../../../redux/messangerReducer\"\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        data: state.messenger.messages,\r\n        newMessageText: state.messenger.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        newMessage: (text) => dispatch(newMessageActionCreator(text))\r\n    }\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps) (Messages);\r\n\r\nexport default MessagesContainer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    grid-column: 1/3;\r\n    grid-row: 2/3;\r\n\r\n    display: grid;\r\n    justify-items: center;\r\n    \r\n    grid-template-columns: 300px auto;\r\n    grid-template-rows: auto 50px;\r\n    \r\n    height: 100%;\r\n\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Content = styled.section``;","import React from \"react\";\r\n// Components\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport { Wrapper } from \"./Messenger.styled\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass Messenger extends React.Component {\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <DialogsContainer />\r\n                <MessagesContainer />\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuthRedirect(Messenger);","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({auth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["Wrapper","styled","section","_templateObject","_taggedTemplateLiteral","Dialog","_templateObject2","props","DialogItem","path","id","_jsx","children","Link","to","name","dialogElements","data","map","d","connect","state","messenger","dialogs","Dialogs","FormWrapper","form","MessageWindow","_templateObject3","Message","div","_templateObject4","NewMessageButton","textarea","_templateObject5","button","_templateObject6","NewMessageReduxForm","reduxForm","_jsxs","onSubmit","handleSubmit","Field","component","messageElements","m","message","newMessage","messages","newMessageText","dispatch","text","newMessageActionCreator","Messages","Messenger","React","render","DialogsContainer","MessagesContainer","withAuthRedirect","mapStateToPropsForRedirect","auth","isAuth","Component","RedirectComponent","this","Navigate"],"sourceRoot":""}