{"version":3,"file":"static/js/746.cc1be59e.chunk.js","mappings":"yNAEO,MAAMA,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qDAKxBC,EAAUJ,EAAAA,GAAOC,QAAOI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mJASxBG,EAAcN,EAAAA,GAAOO,QAAOC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8QAgB5BM,EAAeT,EAAAA,GAAOO,QAAOG,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kIAQ7BQ,EAAmBX,EAAAA,GAAOY,KAAIC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mEAgB9BW,GAVcd,EAAAA,GAAOe,SAAQC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,wKAUjBH,EAAAA,GAAOiB,OAAMC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,qYAqBzBgB,EAAgBnB,EAAAA,GAAOC,QAAOmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qIAQ9BkB,EAAOrB,EAAAA,GAAOO,QAAOe,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gF,sHCnF3B,MAAMJ,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAMxBoB,GAFUvB,EAAAA,GAAOO,QAAOF,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QAEXH,EAAAA,GAAOwB,MAAKhB,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uHAOzBsB,EAAazB,EAAAA,GAAO0B,EAAChB,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6B,cCXlC,MAyCA,EAzCgCwB,IAE5B,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAU,KACND,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAEV,MAIMG,EAAcA,KAChBL,GAAY,GACZF,EAAMQ,aAAaJ,EAAO,EAO9B,OACIK,EAAAA,EAAAA,KAACrC,EAAO,CAAAsC,SACET,GAKEQ,EAAAA,EAAAA,KAACb,EAAU,CACPe,SAZIC,IACpBP,EAAUO,EAAEC,cAAcC,MAAM,EAYhBC,WAAW,EACXC,OAAQT,EACRU,QAAUL,IAAsB,UAAVA,EAAEM,KAAiBX,GAAa,EACtDO,MAAOV,KATXK,EAAAA,EAAAA,KAACX,EAAU,CAACqB,cAhBTC,KACflB,GAAY,EAAK,EAeiCQ,SACjCV,EAAMI,QAAU,SAWnB,E,wBCzCf,MAAMiB,EAAWP,IACpB,IAAIA,EACJ,MAAO,mBAAmB,ECMxBQ,EAAoBC,EAAAA,MAAWvB,IACjC,IAAIwB,EAAe,IAAIxB,EAAMyB,OAC5BC,UACIC,KAAI5B,IAAK6B,EAAAA,EAAAA,MAAClC,EAAAA,GAAI,CAACmC,GAAI9B,EAAE8B,GAAGnB,SAAA,CAAEX,EAAE+B,KAAM/B,EAAEgC,eAOzC,OAAK/B,EAAMgC,SAKPvB,EAAAA,EAAAA,KAACrC,EAAAA,GAAO,CAAAsC,UACJkB,EAAAA,EAAAA,MAACnD,EAAAA,GAAO,CAAAiC,SAAA,EACJD,EAAAA,EAAAA,KAAC9B,EAAAA,GAAW,CAAA+B,UAACD,EAAAA,EAAAA,KAAA,OAAKwB,IAAMjC,EAAMgC,QAAQE,OAAOC,MAAgBnC,EAAMgC,QAAQE,OAAOC,MAA7BC,EAAoCC,IAAI,QAC7FT,EAAAA,EAAAA,MAAC9C,EAAAA,GAAY,CAAA4B,SAAA,EAETD,EAAAA,EAAAA,KAAC6B,EAAsB,CAAClC,OAAQJ,EAAMI,OAAQI,aAAcR,EAAMQ,eAEjER,EAAMgC,QAAQO,SACdvC,EAAMgC,QAAQQ,eACdxC,EAAMgC,QAAQS,8BAGnBb,EAAAA,EAAAA,MAACpC,EAAAA,GAAa,CAAAkB,SAAA,EACVD,EAAAA,EAAAA,KAACiC,EAAgB,CAACC,SAvBfC,IACfC,QAAQC,IAAIF,GACZ5C,EAAM+C,QAAQH,EAAQI,YAAY,IAsBrBxB,WAlBLf,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,GAqBR,IAaZP,GAAmBQ,EAAAA,EAAAA,GAAU,CAAEjE,KAAM,WAAlBiE,EATJlD,IACjB,OACI4B,EAAAA,EAAAA,MAAC5C,EAAAA,GAAgB,CAAC2D,SAAU3C,EAAMmD,aAAazC,SAAA,EAC3CD,EAAAA,EAAAA,KAAC2C,EAAAA,EAAK,CAACC,KAAM,cAAeC,UAAW,QAASC,SAAU,CAAClC,GD1CtCmC,EC0CiE,GD1ClD1C,IAC5C,GAAIA,GAASA,EAAM2C,OAASD,EAAW,MAAM,4BAANE,OAAmCF,EAAS,WACnE,OCyCR/C,EAAAA,EAAAA,KAACtB,EAAAA,GAAS,CAAAuB,SAAC,gBD3CU8C,KC4CN,IAM3B,I,qDC9CA,MAAMG,UAAyBpC,EAAAA,UAC3BqC,iBAAAA,GACI,IAAIC,EAASC,KAAK9D,MAAM+D,OAAOF,OAC1BA,IACDA,EAASC,KAAK9D,MAAMgE,iBACfH,GACDC,KAAK9D,MAAMiE,QAAQC,KAAK,WAGhCJ,KAAK9D,MAAMmE,WAAWN,GACtBC,KAAK9D,MAAMoE,UAAUP,EACzB,CAEAQ,MAAAA,GACI,OACI5D,EAAAA,EAAAA,KAACa,EAAiB,CACdG,MAAOqC,KAAK9D,MAAMyB,MAClBuB,YAAac,KAAK9D,MAAMgD,YACxBhB,QAAS8B,KAAK9D,MAAMgC,QACpBsC,cAAeR,KAAK9D,MAAMuE,kBAC1BxB,QAASe,KAAK9D,MAAM+C,QACpB3C,OAAQ0D,KAAK9D,MAAMI,OACnBI,aAAcsD,KAAK9D,MAAMQ,cAGrC,EAgBJ,SAAegE,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAbmBC,IACZ,CACHjD,MAAOiD,EAAM1C,QAAQP,MACrBuB,YAAa0B,EAAM1C,QAAQgB,YAC3BhB,QAAS0C,EAAM1C,QAAQ2C,YACvBd,OAAQa,EAAME,OAAOf,OACrBzD,OAAQsE,EAAM1C,QAAQ5B,OACtB4D,iBAAkBU,EAAMG,KAAKhD,GAC7BiD,OAAQJ,EAAMG,KAAKC,UAKE,CAAE/B,QAAO,KAAEoB,WAAU,KAAEC,UAAS,KAAE5D,aAAa,OACxEuE,EAAAA,EACAC,EAAAA,EAHJ,CAIErB,E,8EClDF,IAAIsB,EAA8BP,IAAK,CAAOG,KAAMH,EAAMG,KAAKC,SAExD,MAAMC,EAAoBG,IAE7B,MAAMC,UAA0B5D,EAAAA,UAC5B8C,MAAAA,GACI,OAAKP,KAAK9D,MAAM6E,MACTpE,EAAAA,EAAAA,KAACyE,EAAS,IAAKpB,KAAK9D,SADES,EAAAA,EAAAA,KAAC2E,EAAAA,GAAQ,CAACC,GAAI,UAE/C,EAKJ,OAFqCZ,EAAAA,EAAAA,IAAQQ,EAARR,CAAqCU,EAErC,C","sources":["components/Profile/Profile.styled.js","components/Profile/ProfileStatus/ProfileStatus.styled.js","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","utils/validators/validators.js","components/Profile/ProfileFunctional.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    grid-column: 1/3;\r\n    grid-row: 2/3;\r\n`;\r\n\r\nexport const Content = styled.section`\r\n    padding: 16px;\r\n    padding-top: 0;\r\n\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    grid-template-rows: 200px auto;\r\n`;\r\n\r\nexport const PersonalImg = styled.article`\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    border: 1px solid #4b515a;\r\n    border-radius: 6px;\r\n    //max-width: 200px;\r\n    //align-self: center;\r\n    display: block;\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    overflow: hidden;\r\n    \r\n`;\r\n\r\nexport const PersonalInfo = styled.article`\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n    border: 1px solid #4b515a;\r\n    border-radius: 6px;\r\n    margin-left: 16px;\r\n`;\r\n\r\nexport const NewPostContainer = styled.form`\r\n    display: flex;\r\n    height: 25px;\r\n    width: auto;\r\n`;\r\n\r\nexport const NewPostText = styled.textarea`\r\n    background-color: black;\r\n    border-radius: 6px;\r\n    border-color: #4b515a;\r\n    color: white;\r\n    resize: none;\r\n    width: 100%;\r\n    height: 19px;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n    background-color: black;\r\n    border:1px solid #4b515a;\r\n    border-radius: 6px;\r\n    opacity: 0.7;\r\n    color: white;\r\n    width: 120px;\r\n    height: 25px;\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const PersonalPosts = styled.section`\r\n    margin-top: 16px;\r\n    grid-column: 1/3;\r\n    grid-row: 2/3;\r\n    border: 1px solid #4b515a;\r\n    border-radius: 6px;\r\n`;\r\n\r\nexport const Post = styled.article`\r\n    &:not(:last-child){\r\n    border-bottom: 1px solid #4b515a;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    color:white;\r\n`;\r\n\r\nexport const Content = styled.article``;\r\n\r\nexport const StatusEdit = styled.input`\r\n    background-color: inherit;\r\n    border: 1px solid #4b515a;\r\n    border-radius: 6px;\r\n    color: white;\r\n`;\r\n\r\nexport const StatusText = styled.p`\r\n    color: white;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { Wrapper, Content, StatusText, StatusEdit } from \"./ProfileStatus.styled\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n                {!editMode ?\r\n                    <StatusText onDoubleClick={onEditMode}>\r\n                        {props.status || '---'}\r\n                    </StatusText> :\r\n\r\n                    <StatusEdit\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={offEditMode}\r\n                        onKeyUp={(e) => { if (e.key === 'Enter'){offEditMode()}}}\r\n                        value={status} \r\n                    />\r\n                }\r\n            </Wrapper>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length must be under ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport { Wrapper, Content, PersonalImg, PersonalInfo, NewPostContainer, NewPostText, AddButton, PersonalPosts, Post } from \"./Profile.styled\"\r\nimport photo from '../../image/Logo.jpg';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst ProfileFunctional = React.memo(props => {\r\n    let postElements = [...props.posts]\r\n    .reverse()\r\n        .map(p => <Post id={p.id}>{p.post}{p.likeCount}</Post>)\r\n\r\n    let onPostClick = (newPost) => {\r\n        console.log(newPost);\r\n        props.addPost(newPost.newPostText);\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return (<Preloader />)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <PersonalImg><img src={!props.profile.photos.large ? photo : props.profile.photos.large} alt=\"\" /></PersonalImg>\r\n                <PersonalInfo>\r\n\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n                    {props.profile.fullName}\r\n                    {props.profile.lookingForAJob}\r\n                    {props.profile.lookingForAJobDescription}\r\n                </PersonalInfo>\r\n\r\n                <PersonalPosts>\r\n                    <NewPostReduxForm onSubmit={onPostClick} />\r\n                    {postElements}\r\n                </PersonalPosts>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n});\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <NewPostContainer onSubmit={props.handleSubmit}>\r\n            <Field name={'newPostText'} component={'input'} validate={[required, maxLengthCreator(10)]} />\r\n            <AddButton>Add post</AddButton>\r\n        </NewPostContainer>\r\n    );\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({ form: 'newPost' })(NewPostForm);\r\n\r\nexport default ProfileFunctional;","import React from \"react\";\r\nimport ProfileFunctional from \"./ProfileFunctional\";\r\nimport { addPost, getProfile, getStatus, updateStatus } from '../../redux/profileReducer'\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport withParams from \"../../hoc/withParams\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfileFunctional\r\n                posts={this.props.posts}\r\n                newPostText={this.props.newPostText}\r\n                profile={this.props.profile}\r\n                updateNewPost={this.props.updateNewPostText}\r\n                addPost={this.props.addPost}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText,\r\n        profile: state.profile.profileInfo,\r\n        userId: state.search.userId,\r\n        status: state.profile.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addPost, getProfile, getStatus, updateStatus }),\r\n    withAuthRedirect,\r\n    withParams\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({auth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["Wrapper","styled","section","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","PersonalImg","article","_templateObject3","PersonalInfo","_templateObject4","NewPostContainer","form","_templateObject5","AddButton","textarea","_templateObject6","button","_templateObject7","PersonalPosts","_templateObject8","Post","_templateObject9","StatusEdit","input","StatusText","p","props","editMode","setEditMode","useState","status","setStatus","useEffect","offEditMode","updateStatus","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","onKeyUp","key","onDoubleClick","onEditMode","required","ProfileFunctional","React","postElements","posts","reverse","map","_jsxs","id","post","likeCount","profile","src","photos","large","photo","alt","ProfileStatusWithHooks","fullName","lookingForAJob","lookingForAJobDescription","NewPostReduxForm","onSubmit","newPost","console","log","addPost","newPostText","Preloader","reduxForm","handleSubmit","Field","name","component","validate","maxLength","length","concat","ProfileContainer","componentDidMount","userId","this","params","authorizedUserId","history","push","getProfile","getStatus","render","updateNewPost","updateNewPostText","compose","connect","state","profileInfo","search","auth","isAuth","withAuthRedirect","withParams","mapStateToPropsForRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}